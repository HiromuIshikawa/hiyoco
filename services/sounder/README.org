* sounder
本サービスは，gRPC により受け取った予定を AIY Voice Kit を利用して発言する．

* Setup for production

TBA...

* Setup for development
** Requirements
+ Python 3.x
+ AIY Voice Kit

本サービスは，初期設定が完了し， =aiy.audio= モジュールが利用できるAIY Voice Kit上で動作することを前提としている．
具体的には，デモプログラムの1つである =assistant_grpc_demo.py= を実行できることを前提としている．
デモプログラムの詳細や初期設定の方法については，AIY Voice Kitに付属の説明書や， [[https://aiyprojects.withgoogle.com/voice/][公式のホームページ]]に記載されているため，ここでは割愛する．

** Settings
1. ソースコードの取得

   #+BEGIN_SRC sh
   $ git clone https://github.com/nomlab/hiyoco
   #+END_SRC

2. =setup.sh= の実行
以下のコマンドで =setup.sh= を実行する．

   #+BEGIN_SRC sh
   $ chmod +x setup.sh
   $ chmod +x compile_proto.sh
   $ ./setup.sh
   #+END_SRC

=setup.sh= は，開発環境を整えるためのスクリプトであり，以下の処理を行っている．

   + 以下のファイルに記述された Python ライブラリのインストール
    + requirements/common.txt
    + requirements/development.txt
   + 以下の =.proto= ファイルのコンパイル
    + hiyoco/proto/calendar/event.proto
    + hiyoco/proto/sounder/service.proto

なお，上記のコンパイルでは， =compile_proto.sh= に記述された処理を実行している．
下記に =setup.sh= の実行例を示す．

   #+BEGIN_SRC sh
   Python library will be installed. Are you OK? [Y/n]
   # Python ライブラリのインストール
   Done
   Start compile .proto file
   # .proto ファイルのコンパイル
   Done
   #+END_SRC


** Launch sounder server
1. sounder のサーバを起動

   AIY Voice Kit で下記を実行する．
  #+BEGIN_SRC sh
  $ python sounder_server.py [PORT]
  #+END_SRC

[PORT]はポート番号を表す．[PORT]は指定しなかった場合，50051となる．
上記を実行すると， =http://localhost:[PORT]= でサーバが待機する．


** Test
1. テストスクリプトの実行

=sounder_server.py= 起動時に指定したポート番号を[PORT]に指定して，以下のコマンドを実行する．
  #+BEGIN_SRC sh
  $ python sounder_client.py [PORT]
  #+END_SRC


   上記を実行すると，soudner のサーバが Voice Kit を利用して以下の文章を発言する．

   #+BEGIN_SRC
  Summary is "Test event"
  Description is "This is test"
   #+END_SRC

* References
1. [[https://aiyprojects.withgoogle.com/voice/][AIY Voice Kit]]
2. [[https://grpc.io/docs/quickstart/python.html][grpc(Google documents)]]
